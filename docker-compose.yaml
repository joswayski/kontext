# Simplified Kafka setup with multiple independent single-node clusters (one per domain: rides, users, drivers, payments).
# Each is a KRaft-mode Kafka broker (no ZooKeeper) with JMX enabled for metrics querying.
# Networks: Removed all custom networks for simplicity. All services join the default Docker Compose network automatically.
# Glide: Runs inside Docker but uses host network mode to connect via localhost ports (like the external API).
# This allows Glide to use host's localhost:19092 etc., without internal container resolution.
# Env: Removed env_file and most environment vars from Glide for simplicityâ€”set them on host or via docker run if needed.

volumes:
  kafka-rides-data: null
  kafka-users-data: null
  kafka-drivers-data: null
  kafka-payments-data: null

services:

  glide:
    build:
      context: .
      dockerfile: glide/Dockerfile
    network_mode: host  # Uses host network to connect via localhost ports (e.g., localhost:19092)
    depends_on:
      - kafka-users
      - kafka-rides
      - kafka-payments
      - kafka-drivers

  # TODO - For simplicity, we run these ouside of Docker compose
  # web:
  #   build:
  #     context: .
  #     dockerfile: web/Dockerfile
  #   ports:
  #     - "${WEB_PORT:-3000}:${WEB_PORT:-3000}"
  #   network_mode: host  # Optional if you want to run web inside

  # api:
  #   build:
  #     context: .
  #     dockerfile: api/Dockerfile
  #   ports:
  #     - "${API_PORT:-3001}:${API_PORT:-3001}"
  #   network_mode: host  # Optional if you want to run api inside


  # RIDES Kafka Cluster
  kafka-rides:
    image: bitnami/kafka:3.8.0  # Modern Kafka with KRaft support
    container_name: kafka-rides
    ports:
      - 19092:9092  # External Kafka port (matches original Redpanda)
      - 19644:19644  # JMX port
    environment:
      KAFKA_CFG_NODE_ID: 1
      KAFKA_CFG_PROCESS_ROLES: controller,broker
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093  # Updated for localhost (since no custom networks)
      KAFKA_KRAFT_CLUSTER_ID: 1z2x3c4v5b6n7m8k9l0p
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://localhost:19092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: false
      KAFKA_ENABLE_JMX_EXPORTER: yes
      KAFKA_JMX_OPTS: -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=true -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.rmi.port=19644 -Djava.rmi.server.hostname=localhost -Dcom.sun.management.jmxremote.password.file=/opt/bitnami/kafka/config/jmx_password -Dcom.sun.management.jmxremote.access.file=/opt/bitnami/kafka/config/jmx_access
      JMX_EXPORTER_PORT: 19644
      KAFKA_JMX_USERNAME: admin  # Default username for JMX auth (enable in .env)
      KAFKA_JMX_PASSWORD: secret  # Default password (change in prod; enable in .env)
    volumes:
      - kafka-rides-data:/bitnami/kafka
      # Add these files for JMX auth (create them with username:password and roles)
      - ./jmx/jmx_password:/opt/bitnami/kafka/config/jmx_password:ro
      - ./jmx/jmx_access:/opt/bitnami/kafka/config/jmx_access:ro

  # USERS Kafka Cluster
  kafka-users:
    image: bitnami/kafka:3.8.0
    container_name: kafka-users
    ports:
      - 29092:9092
      - 29644:29644  # JMX port
    environment:
      KAFKA_CFG_NODE_ID: 1
      KAFKA_CFG_PROCESS_ROLES: controller,broker
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
      KAFKA_KRAFT_CLUSTER_ID: a1b2c3d4e5f6g7h8i9j0
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://localhost:29092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: false
      KAFKA_ENABLE_JMX_EXPORTER: yes
      KAFKA_JMX_OPTS: -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=true -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.rmi.port=29644 -Djava.rmi.server.hostname=localhost -Dcom.sun.management.jmxremote.password.file=/opt/bitnami/kafka/config/jmx_password -Dcom.sun.management.jmxremote.access.file=/opt/bitnami/kafka/config/jmx_access
      JMX_EXPORTER_PORT: 29644
      KAFKA_JMX_USERNAME: admin
      KAFKA_JMX_PASSWORD: secret
    volumes:
      - kafka-users-data:/bitnami/kafka
      - ./jmx/jmx_password:/opt/bitnami/kafka/config/jmx_password:ro
      - ./jmx/jmx_access:/opt/bitnami/kafka/config/jmx_access:ro

  # DRIVERS Kafka Cluster
  kafka-drivers:
    image: bitnami/kafka:3.8.0
    container_name: kafka-drivers
    ports:
      - 39092:9092
      - 39644:39644  # JMX port
    environment:
      KAFKA_CFG_NODE_ID: 1
      KAFKA_CFG_PROCESS_ROLES: controller,broker
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
      KAFKA_KRAFT_CLUSTER_ID: q1w2e3r4t5y6u7i8o9p0
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://localhost:39092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: false
      KAFKA_ENABLE_JMX_EXPORTER: yes
      KAFKA_JMX_OPTS: -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=true -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.rmi.port=39644 -Djava.rmi.server.hostname=localhost -Dcom.sun.management.jmxremote.password.file=/opt/bitnami/kafka/config/jmx_password -Dcom.sun.management.jmxremote.access.file=/opt/bitnami/kafka/config/jmx_access
      JMX_EXPORTER_PORT: 39644
      KAFKA_JMX_USERNAME: admin
      KAFKA_JMX_PASSWORD: secret
    volumes:
      - kafka-drivers-data:/bitnami/kafka
      - ./jmx/jmx_password:/opt/bitnami/kafka/config/jmx_password:ro
      - ./jmx/jmx_access:/opt/bitnami/kafka/config/jmx_access:ro

  # PAYMENTS Kafka Cluster
  kafka-payments:
    image: bitnami/kafka:3.8.0
    container_name: kafka-payments
    ports:
      - 49092:9092
      - 49644:49644  # JMX port
    environment:
      KAFKA_CFG_NODE_ID: 1
      KAFKA_CFG_PROCESS_ROLES: controller,broker
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
      KAFKA_KRAFT_CLUSTER_ID: z1x2c3v4b5n6m7k8l9p0
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://localhost:49092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: false
      KAFKA_ENABLE_JMX_EXPORTER: yes
      KAFKA_JMX_OPTS: -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=true -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.rmi.port=49644 -Djava.rmi.server.hostname=localhost -Dcom.sun.management.jmxremote.password.file=/opt/bitnami/kafka/config/jmx_password -Dcom.sun.management.jmxremote.access.file=/opt/bitnami/kafka/config/jmx_access
      JMX_EXPORTER_PORT: 49644
      KAFKA_JMX_USERNAME: admin
      KAFKA_JMX_PASSWORD: secret
    volumes:
      - kafka-payments-data:/bitnami/kafka
      - ./jmx/jmx_password:/opt/bitnami/kafka/config/jmx_password:ro
      - ./jmx/jmx_access:/opt/bitnami/kafka/config/jmx_access:ro
